generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                String          @id @default(uuid())
  first_name        String
  last_name         String
  middle_name       String
  email             String          @unique
  birth_date        DateTime
  gender            String
  phone             String
  password          String
  orders            Order[]
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  ClientStatistic   ClientStatistic @relation(fields: [clientStatisticId], references: [id])
  clientStatisticId String          @unique

  @@map("users")
}

model Product {
  id                    String   @id @default(uuid())
  name                  String
  description           String
  price                 Float
  count                 Int
  image                 String?
  os                    String
  case_type             String
  case_material         String
  fluid_protection_type String?
  sim_count             String
  weight                String
  width                 Int
  height                Int
  depth                 Int
  display_config        String
  display_herz          String
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  Order           Order?        @relation(fields: [orderId], references: [id])
  orderId         String?
  ProductModel    ProductModel  @relation(fields: [productModelId], references: [id])
  productModelId  String
  SellStatistic   SellStatistic @relation(fields: [sellStatisticId], references: [id])
  sellStatisticId String        @unique
  color           ProductColor  @relation(fields: [productColorId], references: [id])
  productColorId  String

  @@map("products")
}

model ProductColor {
  id      String    @id @default(uuid())
  color   String    @unique
  Product Product[]
}

model ProductModel {
  id       String    @id @default(uuid())
  name     String    @unique
  products Product[]
}

model Order {
  id            String      @id @default(uuid())
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  products      Product[]
  total         Float
  OrderStatus   OrderStatus @relation(fields: [orderStatusId], references: [status])
  orderStatusId String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@map("orders")
}

model OrderStatus {
  id     String  @default(uuid())
  status String  @unique
  orders Order[]
}

model ClientStatistic {
  id               String @id @default(uuid())
  average_check    Int    @default(0)
  total_orders     Int    @default(0)
  total_orders_sum Int    @default(0)

  User User?
}

model SellStatistic {
  id         String   @id @default(uuid())
  sell_count Int      @default(0)
  Product    Product?
}
